plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'dev.galacticmc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = 'https://repo.xenondevs.xyz/releases'
        url = 'https://repo.xenondevs.xyz/releases'
    }
}


dependencies {
    //Paper
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    //PAPI
    compileOnly 'me.clip:placeholderapi:2.11.6'
    //ItemsAdder
    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.6.1'
    //MariaDB
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.7'
    //GlowAPI
    compileOnly 'io.netty:netty-all:4.1.68.Final'
    //Inventory
    implementation "xyz.xenondevs.invui:invui:1.33"
    compileOnly "net.kyori:adventure-text-minimessage:4.17.0"

}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
