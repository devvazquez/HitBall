plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'dev.galacticmc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "jitpack"
        url = 'https://jitpack.io'
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}


dependencies {
    //Paper
    compileOnly "com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT"
    //PAPI
    compileOnly 'me.clip:placeholderapi:2.11.6'
    //InvetivetalentDev libs...
    implementation 'com.github.InventivetalentDev:GlowAPI:1.5.6-SNAPSHOT'
    implementation 'org.inventivetalent.packetlistenerapi:api:3.9.11-SNAPSHOT'
    //ItemsAdder
    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.6.1'
    // MariaDB
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.7'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
